// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  nombre_user       String
  password          String
  nombre            String
  apellidos         String
  cedula            String
  ubicacion         String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  biblioteca        Biblioteca[]
  calendario        Calendario[]
  edicion_contenido edicion_contenido[]
  miembros          miembros[]
  comentarios       comentario_foro[]
  Intereses         Intereses[]
  foro_comentario   mensaje_foro[]
  likes_foro        likes_foro[]
}

model Biblioteca {
  id                Int                 @id @default(autoincrement())
  nombre_recurso    String
  descripcion       String
  categoria         String
  fecha             DateTime
  ruta_archivo      String
  user              User                @relation(fields: [id_user], references: [id])
  id_user           Int
  calendario        Calendario[]
  edicion_contenido edicion_contenido[]
}

model Calendario {
  id            Int        @id @default(autoincrement())
  nombre_evento String
  descripcion   String
  fecha_inicio  DateTime
  user          User       @relation(fields: [id_user], references: [id])
  id_user       Int
  biblioteca    Biblioteca @relation(fields: [id_biblioteca], references: [id])
  id_biblioteca Int
}

model edicion_contenido {
  id            Int        @id @default(autoincrement())
  fecha_edicion DateTime
  user          User       @relation(fields: [id_user], references: [id])
  id_user       Int
  biblioteca    Biblioteca @relation(fields: [id_biblioteca], references: [id])
  id_biblioteca Int
}

model foros {
  id          Int            @id @default(autoincrement())
  titulo      String
  descripcion String
  categoria   String
  like        Int
  miembros    miembros[]
  comentarios mensaje_foro[]
  likes_foro  likes_foro[]
}

model comentario_foro {
  id         Int      @id @default(autoincrement())
  comentario String
  createAt   DateTime @default(now())
  id_user    Int
  user       User     @relation(fields: [id_user], references: [id])
}

model miembros {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [id_user], references: [id])
  id_user Int
  foros   foros @relation(fields: [id_foro], references: [id])
  id_foro Int
}

model mensaje_foro {
  id         Int      @id @default(autoincrement())
  comentario String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [id_user], references: [id])
  id_user    Int
  foros      foros    @relation(fields: [id_foro], references: [id])
  id_foro    Int
}

model likes_foro {
  id      Int   @id @default(autoincrement())
  like    Int
  id_user Int
  id_foro Int
  foros   foros @relation(fields: [id_foro], references: [id])
  users User @relation(fields: [id_user], references: [id])
}

model colaboradores {
  id                  Int                 @id @default(autoincrement())
  nombre              String
  descripcion         String
  recursos_educativos recurso_educativo[]
}

model recurso_educativo {
  id               Int           @id @default(autoincrement())
  titulo           String
  descripcion      String
  categoria        String
  ruta_archivo     String
  fecha            DateTime      @default(now())
  colaboradores    colaboradores @relation(fields: [id_colaboradores], references: [id])
  id_colaboradores Int
  Intereses        Intereses[]
}

model Intereses {
  id                   Int               @id @default(autoincrement())
  id_user              Int
  id_recurso_educativo Int               @map("id_recurso")
  user                 User              @relation(fields: [id_user], references: [id])
  foros                recurso_educativo @relation(fields: [id_recurso_educativo], references: [id])
}
